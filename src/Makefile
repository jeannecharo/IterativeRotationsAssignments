#
# Fortran compiler
#
F90 = gfortran

#
# archiver
#
AR = ar

#
# lapack flag. 
# You can use: -L/path/to/lapack/ instead
#
LIBLAPACK = -llapack

#
# compilation flags
#
FFLAGS = -fdefault-real-8 -fcheck=bounds -ffree-line-length-512 -fPIC -cpp -Ofast -march=native -ffast-math -funroll-loops
#FFLAGS = -fdefault-real-8 -fcheck=bounds -ffree-line-length-512 -fPIC -cpp -O1
#FFLAGS += -g -DDEBUG -pedantic -std=f2008

SRC = $(PWD)
OBJ = $(SRC)/Obj

MOD = -I$(OBJ) -J$(OBJ)



# Produced filenames
#
IRALIB = libira.a
SHLIB = libira.so


#=======================
# object files
#
# utils
futils := \
	$(SRC)/timer.f90 \
	$(SRC)/sofi_tools.f90 \
	$(SRC)/err_module.f90 \
	$(SRC)/version.f90 \
	$(SRC)/sorting_module.f90 \
	$(SRC)/set_candidate.f90 \
	$(SRC)/cshda.f90 \
	$(SRC)/ira_routines.f90 \
	$(SRC)/sofi_routines.f90
outils:= $(patsubst $(SRC)%,$(OBJ)%,$(futils:%.f90=%.o))


flib := $(SRC)/library_ira.f90 \
	$(SRC)/library_sofi.f90
olib := $(patsubst $(SRC)%,$(OBJ)%,$(flib:%.f90=%.o))

#======================


default: msg

all : lib shlib

$(OBJ)%.o: $(SRC)/%.f90
	$(F90) $(FFLAGS) $(MOD) -c $< -o $@


lib: $(OBJ) $(IRALIB)
shlib: $(OBJ) $(SHLIB)

#
# object folder
#
$(OBJ):
	@if [ ! -d $(OBJ) ]; then mkdir $(OBJ) ; fi


#====
# pack the library
#====
$(IRALIB): $(outils) $(olib)
	$(AR) -rcv $@ $^

#====
# pack the shared library
#====
$(SHLIB): $(olib) $(outils)
	$(F90) -o $@ -shared $(MOD) $^ $(FFLAGS) $(LIBLAPACK)

msg:
	@echo 'Use one of the following:'
	@echo ''
	@echo ' make lib     -> compiles the $(IRALIB) library'
	@echo ' make shlib   -> compiles the $(SHLIB) shared library'
	@echo ' make all     -> all of the above'
	@echo ''
	@echo ' make clean   -> remove all files generated by make'
	@echo ''
	@echo 'Quitting.'




clean:
	rm -rf $(IRALIB) $(SHLIB)
	rm -rf $(OBJ)


