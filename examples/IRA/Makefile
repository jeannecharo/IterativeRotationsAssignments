#
# Fortran compiler
#
FCOMP = gfortran
CCOMP=gcc

#
# lapack flag. 
# You can use: -L/path/to/lapack/ instead
#
LIBLAPACK = -llapack


#
# compilation flags
#
FFLAGS = -Wall -fdefault-real-8 -fbounds-check
CFLAGS =

SRC = $(PWD)
SRCDIR = ../../src
INTERFDIR = $(SRC)/../../interface
OBJ = $(SRC)/Obj

MOD = -I$(OBJ) -J$(OBJ) -I$(INTERFDIR)

#
# path to src/libira.so
#
SHLIB = $(SRCDIR)/libira.so


# Produced filenames
#
IRAUNI_X = f90_program.x
C_PROG = c_program.x


#=======================
# object files
#
f_uni := $(SRC)/f90_program.f90
o_uni := $(patsubst $(SRC)%, $(OBJ)%, $(f_uni:%.f90=%.o))

cprog := $(SRC)/c_program.c
#======================


default: msg

all : f90 cprog

$(OBJ)%.o: $(SRC)/%.f90
	$(FCOMP) $(FFLAGS) $(MOD) -c $< -o $@


f90: $(OBJ) $(IRAUNI_X)
cprog: $(OBJ) $(C_PROG)

#
# object folder
#
$(OBJ):
	@if [ ! -d $(OBJ) ]; then mkdir $(OBJ) ; fi



#====
# Compile the f90 executable
#====
$(IRAUNI_X): $(o_uni)
	$(FCOMP) $(FFLAGS) $(MOD) $^ -o $@ $(SRCDIR)/Obj/*.o $(LIBLAPACK)

#====
# Compile the C executable
#====
$(C_PROG): $(cprog)
	$(CCOMP) $(CFLAGS) $(MOD) -o $@ $^ $(SHLIB)


msg:
	@echo 'Use one of the following:'
	@echo ''
	@echo ' make f90     -> compiles the f90 example program $(IRAUNI_X) executable'
	@echo ' make cprog   -> compiles the C example program $(C_PROG)'
	@echo ' make all     -> all of the above'
	@echo ''
	@echo ' make clean   -> remove all files generated by make'
	@echo ''
	@echo 'Quitting.'




clean:
	rm -rf $(IRAUNI_X)  $(C_PROG)
	rm -rf $(OBJ)



